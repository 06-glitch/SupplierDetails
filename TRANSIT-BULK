string ls_storage_loc_nbr, ls_location_exists, ls_current_storage_loc_type_code, ls_active_status_ind
string ls_err_msg
string ls_storage_loc_type_code

long li_return, ll_rc

ls_storage_loc_nbr = sle_storage_loc_nbr.text

// Validate required input
IF ls_storage_loc_nbr = '' THEN
    MessageBox('Usage Error','Trailer Nbr is a required field.')
    RETURN
END IF

// Determine selected radio button value
IF rb_transit.Checked THEN
    ls_storage_loc_type_code = 'TRANSIT'
ELSEIF rb_storage.Checked THEN
    ls_storage_loc_type_code = 'TRAILBULK'
ELSE
    MessageBox('Usage Error','Trailer Type is required.')
    RETURN
END IF

// Check if storage location exists
ls_location_exists = 'N'
SELECT 'Y', Storage_Loc_Type_Code, Active_Status_Ind
  INTO :ls_location_exists, :ls_current_storage_loc_type_code, :ls_active_status_ind
  FROM t_Storage_Location
 WHERE Storage_Loc_Nbr = :ls_storage_loc_nbr;

IF ls_location_exists = 'Y' THEN
    // If type code has changed, ask user to confirm and update
    IF (ls_current_storage_loc_type_code <> ls_storage_loc_type_code) THEN
        ll_rc = MessageBox("Warning", "Are you sure you want to change the Storage Location Type Code from " + Trim(ls_current_storage_loc_type_code) + " to " + Trim(ls_storage_loc_type_code) + "?", Question!, YesNo!, 2)
        IF ll_rc = 1 THEN
            // Update the existing record
            UPDATE t_Storage_Location
            SET Storage_Loc_Type_Code = :ls_storage_loc_type_code
            WHERE Storage_Loc_Nbr = :ls_storage_loc_nbr
            USING SQLCA;
            
            IF SQLCA.SQLCode <> 0 THEN
                ls_err_msg = SQLCA.SQLErrText
                MessageBox("Error", "Update of Storage Location's Storage_Loc_Type_Code failed: " + ls_err_msg)
                RETURN
            END IF
        ELSE
            RETURN // User canceled
        END IF
    END IF
ELSE
    // Insert new location
    INSERT INTO t_Storage_Location (Storage_Loc_Nbr, Storage_Loc_Type_Code, Active_Status_Ind)
    VALUES (:ls_storage_loc_nbr, :ls_storage_loc_type_code, 'Y')
    USING SQLCA;

    IF SQLCA.SQLCode <> 0 THEN
        ls_err_msg = SQLCA.SQLErrText
        MessageBox("Error", "Insert of new Storage Location failed: " + ls_err_msg)
        RETURN
    END IF
END IF
